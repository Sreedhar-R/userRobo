{"version":3,"sources":["reportWebVitals.js","Card.js","Cardlist.js","SearchBox.js","Scroll.js","Popup.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Popup","closePopup","username","city","onClick","float","App","onSearchChange","event","setState","searchfield","target","value","console","log","state","popItUp","popup","message","fetch","response","json","users","this","robotsName","filteredRobots","filter","robot","toLowerCase","includes","length","Fragment","address","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad2c0021.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\n\r\n\r\nconst Card = ({id,name,email}) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"roboImage\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i) => \r\n                {\r\n                return <Card\r\n                        key = {i}\r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <input type=\"search\" placeholder=\"Search Robots\" onChange={searchChange}/>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'3px solid black', height:'500px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './Popup.css';\r\n\r\nconst Popup = ({closePopup,id,name,username,email,city}) => {\r\n    return(\r\n        <div className=\"popup--back\">\r\n            <div className=\"popup--content\">\r\n                <div className=\"popup--close\" onClick={closePopup}>\r\n                    x\r\n                </div>\r\n                <div style={{float:'left'}}><img src={`https://robohash.org/${id}?200x200`} alt=\"roboImage\"/></div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <div >\r\n                    <h3>name:{name}</h3>\r\n                    <h3>username:{username}</h3>\r\n                    <h3>email:{email}</h3>\r\n                    <h3>city:{city}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;","import React from 'react';\nimport './App.css';\nimport CardList from './Cardlist';\n// import {robots} from './robots';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\nimport Popup from './Popup'\n\nclass App extends React.Component {\n\n  robotsName;\n\n  constructor(){\n    super()\n    this.state = {\n      message:'RoboFans',\n      robots:[],\n      searchfield:'',\n      popup:false\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield : event.target.value});\n    console.log(this.state.searchfield);\n  }\n\n  componentWillMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>{\n        return response.json()\n    })\n    .then(users =>{\n      this.setState({robots:users});\n    })\n      this.robotsName = \"Sreedhar\";\n  }\n\n  popItUp = () => {\n    this.setState({popup:true})\n  }\n\n  closePopup = () => {\n    this.setState({popup:false})\n  }\n\n  render(){\n\n    const filteredRobots = this.state.robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n    \n\n\n    return(\n      !filteredRobots.length ?<h1 className=\"tc\">Loding...</h1>\n      :\n      <React.Fragment>\n        {this.state.popup?<Popup closePopup={this.closePopup} name={this.state.robots[0].name} id={this.state.robots[0].id} username={this.state.robots[0].username} email={this.state.robots[0].email} city={this.state.robots[0].address.city}/>:\"\"}\n      <div className=\"tc\">\n        <h1>{this.state.message}</h1>\n        <button onClick={this.popItUp}>PopItUp</button>\n        <SearchBox searchChange = {this.onSearchChange} />\n        <h1>{this.robotsName}</h1>\n        <Scroll>\n          < CardList robots = {filteredRobots}/>\n        </Scroll>\n\n      </div>\n      </React.Fragment>\n    )\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}